@using DataLayer
@using System.Configuration
@{
    var lstOrg = new List<SelectLists>();
    var lstDept = new List<SelectLists>();

    /*Document obj = new Document();
    AttachInfoMap objam = new AttachInfoMap();*/
    string Info1 = ConfigurationManager.AppSettings["Info1DefaultText"];
    string Info2 = ConfigurationManager.AppSettings["Info2DefaultText"];
    string Info3 = ConfigurationManager.AppSettings["Info3DefaultText"];
    string Info4 = ConfigurationManager.AppSettings["Info4DefaultText"];
    /*try
    {
        obj = DBOperations<Document>.GetSpecific(new Document() { DocID = Model.Item1.DocID, Opmode = 1 }, Constant.usp_DocumentManager);
        if (obj != null && obj.SubTypeID > default(long))
        {
            objam = DBOperations<AttachInfoMap>.GetSpecific(new AttachInfoMap() { SubTypeID = obj.SubTypeID, Opmode = default(int) }, Constant.usp_AttachmentNameMap);
        }
        if (objam != null && objam.ID > default(long))
        {
            Info1 = objam.AttachInfo1Name;
            Info2 = objam.AttachInfo2Name;
            Info3 = objam.AttachInfo3Name;
        }
    }
    catch { }*/
    
    IEnumerable<long> orgLst = GlobalSettings.oUserPermission.Select(d => d.OrgID);
    IEnumerable<long> deptLst = GlobalSettings.oUserPermission.Select(d => d.DeptID);
    
    var lstFinYear = new DropdownClient().Getdropdown(Dropdown.FinYear);
    if (orgLst != null && orgLst.Count() > default(int) && GlobalSettings.oUserData.RoleID != (long)Role.BuiltinAdmin)
    {
        lstOrg = new DropdownClient().Getdropdown(Dropdown.Organization).Where(w => orgLst.Contains(w.Value) || w.Value == 0).ToList();
    }
    else
    {
        lstOrg = new DropdownClient().Getdropdown(Dropdown.Organization).ToList();
    }
    if (deptLst != null && deptLst.Count() > default(int) && GlobalSettings.oUserData.RoleID != (long)Role.BuiltinAdmin)
    {
        lstDept = new DropdownClient().Getdropdown(Dropdown.Department).Where(w => deptLst.Contains(w.Value) || w.Value == 0).ToList();
    }
    else
    {
        lstDept = new DropdownClient().Getdropdown(Dropdown.Department).ToList();
    }
    List<SelectLists> lstProject = new List<SelectLists>();
    lstProject.Add(new SelectLists() { Value = 0, Text = string.Format("Select {0}", Utility.GetCustomDescription(Dropdown.Project)) });
    List<SelectLists> lstSubType = new List<SelectLists>();
    lstSubType.Add(new SelectLists() { Value = 0, Text = string.Format("Select {0}", Utility.GetCustomDescription(Dropdown.SubType)) });
}

<div class="form-group row">
    <div class="col-sm-6">
        <input class="form-control datepicker" placeholder="Document Date From" type="text" id="txtDateFrom" readonly />
    </div>
    <div class="col-sm-6">
        <input class="form-control datepicker" placeholder="Document Date To" type="text" id="txtDateTo" readonly />
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-4 form-control-label">Approval Status</label>
    <div class="col-sm-8">
        <select id="ddlApproval" class="form-control">
            <option value="0">Show All</option>
            <option value="1">Show Only Approved</option>
            <option value="2" selected>Show Only Not Approved</option>
        </select>
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-4 form-control-label">Financial Year</label>
    <div class="col-sm-8">
        @Html.DropDownList("Value", new SelectList(lstFinYear, "Value", "Text"), new { @id = "ddlFinYear", @class = "form-control" })
    </div>
</div>
<div class="form-group row" style="display: none;">
    <label class="col-sm-4 form-control-label">Organization</label>
    <div class="col-sm-8">
        @Html.DropDownList("Value", new SelectList(lstOrg, "Value", "Text"), new { @id = "ddlOrganization", @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-4 form-control-label">Department</label>
    <div class="col-sm-8">
        @Html.DropDownList("Value", new SelectList(lstDept, "Value", "Text"), new { @id = "ddlDepartment", @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-4 form-control-label">Project</label>
    <div class="col-sm-8" id="dvProject">
        @Html.DropDownList("Value", new SelectList(lstProject, "Value", "Text"), new { @id = "ddlProject", @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-4 form-control-label">Sub Type</label>
    <div class="col-sm-8" id="dvProject">
        @Html.DropDownList("Value", new SelectList(lstSubType, "Value", "Text"), new { @id = "ddlSubType", @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-12">
        <input class="form-control" placeholder="Document Number" type="text" id="txtDocNumber" style="text-transform: uppercase;" />
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-12">
        <input class="form-control" placeholder="@(Info1) (Optional)" type="text" id="txtAttachInfo1" style="text-transform: uppercase;" />
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-12">
        <input class="form-control" placeholder="@(Info2) (Optional)" type="text" id="txtAttachInfo2" style="text-transform: uppercase;" />
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-12">
        <input class="form-control" placeholder="@(Info3) (Optional)" type="text" id="txtAttachInfo3" style="text-transform: uppercase;" />
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-12">
        <input class="form-control" placeholder="@(Info4) (Optional)" type="text" id="txtAttachInfo4" style="text-transform: uppercase;" />
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-12">
        <button id="btnSearch" class="btn btn-primary">Search</button>
        <button id="btnReset" class="btn btn-secondary">Reset</button>
    </div>
</div>