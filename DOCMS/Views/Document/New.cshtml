@using Newtonsoft.Json;
@using DataLayer;
@using System.Configuration;
@model Document
@{
    ViewBag.Title = "Document Add/Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<AttachmentFile> lst = new List<AttachmentFile>();
    if (Model.TotalAttachment > default(long))
    {
        try
        {
            lst = DBOperations<AttachmentFile>.GetAllOrByRange(new AttachmentFile() { DocID = Model.DocID, Opmode = default(int) }, "usp_Attachment");
        }
        catch { }
    }
}

@section csslib {
    <link href="@(Url.DatedContent("~/fineuploader/fine-uploader-gallery.min.css"))" rel="stylesheet" />
    <script src="@Url.DatedContent("~/fineuploader/all.fine-uploader.min.js")"></script>
    <link href="@(Url.DatedContent("~/css/jquery-customselect.css"))" rel="stylesheet" />
    <link href="@(Url.DatedContent("~/css/bootstrap-datetimepicker.min.css"))" rel="stylesheet" />
    @{ Html.RenderPartial("_ChunkUploader", Model); }
}

<div id="modalAttachmentViewer" tabindex="-1" role="dialog" aria-labelledby="AttachmentViewer" aria-hidden="true" class="modal fade text-left" data-backdrop="static" data-keyboard="false"></div>
<input type="hidden" id="hdnID" value="@Encryption64.EncryptQueryString(Model.DocID.ToString())" />
<section class="forms">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-close">
                    </div>
                    <div class="card-header d-flex align-items-center">
                        <h3 class="h4">&nbsp;</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            <div class="form-group row">
                                <label class="col-sm-3 form-control-label">Financial Year*</label>
                                <div class="col-sm-6">
                                    @Html.DropDownList("Value", new SelectList(ViewBag.FinYears, "Value", "Text"), new { @id = "ddlFinYear", @class = "form-control custom-select" })
                                    <input type="hidden" id="hdnFinYearID" value="@(Model.FinYearID)" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-3 form-control-label">Document Number*</label>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control" value="@(Model.DocNumber)" id="txtDocNo" maxlength="200" style="text-transform: uppercase;" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-3 form-control-label">Document Date*</label>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control" value="@(Model.DocDate.ToString("dd/MM/yyyy"))" id="txtDocDate" maxlength="20" readonly />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-3 form-control-label">Department*</label>
                                <div class="col-sm-6">
                                    @Html.DropDownList("Value", new SelectList(ViewBag.Departments, "Value", "Text"), new { @id = "ddlDepartment", @class = "form-control custom-select" })
                                    <input type="hidden" id="hdnDeptID" value="@(Model.DeptID)" />
                                </div>
                            </div>
                            <div class="form-group row" id="dvProject" style="display: none;">
                                <label class="col-sm-3 form-control-label">Project*</label>
                                <div class="col-sm-6" id="dvchildProject">
                                    <select id="ddlProject" class="form-control custom-select"></select>
                                </div>
                                <input type="hidden" id="hdnProjectID" value="@(Model.ProjectID)" />
                            </div>
                            <div class="form-group row" id="dvSubType" style="display: none;">
                                <label class="col-sm-3 form-control-label">Project Sub-Type*</label>
                                <div class="col-sm-6" id="dvchildSubType">
                                    <select id="ddlSubType" class="form-control custom-select"></select>
                                </div>
                                <input type="hidden" id="hdnSubType" value="@(Model.SubTypeID)" />
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-3 form-control-label">File Number</label>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control" value="@(Model.FileNo)" id="txtFileNo" maxlength="200" style="text-transform: uppercase;" disabled/>
                                </div>
                            </div>
                            <div class="line dvapproval" @((Model.DocID > default(long)) ? @Html.Raw("") : @Html.Raw("style=\"display: none;\""))></div>
                            <div class="form-group row dvapproval" @((Model.DocID > default(long)) ? @Html.Raw("") : @Html.Raw("style=\"display: none;\""))>
                                <label class="col-sm-3 form-control-label">Is Approved</label><br />
                                <div class="col-sm-9">
                                    <div class="i-checks">
                                        <input id="chkIsApproved" type="checkbox" value="" class="checkbox-template" @(Model.IsUploadApproved > default(int) ? "checked disabled" : "") />
                                        <label for="chkIsApproved"><small class="text-primary">&nbsp;</small></label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row dvapproval" @((Model.DocID > default(long)) ? @Html.Raw("") : @Html.Raw("style=\"display: none;\""))>
                                <div class="col-sm-12" style="text-align: center;">
                                    <small class="text-primary">Once approved, there is no other option to revoke the approval without the permission of @(Utility.GetCustomDescription(Role.BuiltinAdmin))</small>
                                </div>
                            </div>
                            <div class="line ulod" @((Model.DocID > default(long) && Model.IsUploadApproved <= default(int)) ? @Html.Raw("") : @Html.Raw("style=\"display: none;\""))></div>
                            <div class="form-group row ulod" @((Model.DocID > default(long) && Model.IsUploadApproved <= default(int)) ? @Html.Raw("") : @Html.Raw("style=\"display: none;\""))>
                                <div class="col-sm-12">
                                    <div id="uploader"></div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-sm-12 dvattach">
                                    @if (Model.TotalAttachment > default(int))
                                    {
                                        Html.RenderPartial("_AttachmentList", lst);
                                    }
                                </div>
                            </div>
                            <div class="line"></div>
                            <div class="form-group row">
                                <div class="col-sm-4 offset-sm-3">
                                    @*@if (GlobalSettings.oUserData.RoleID == (long)Role.BuiltinAdmin || GlobalSettings.oUserData.RoleID == (long)Role.Admin)*@
                                    @if (Model.IsUploadApproved <= default(int))
                                    {
                                        <button id="btnSave" class="btn btn-primary">Save</button>
                                    }
                                    <button id="btnCancel" class="btn btn-secondary">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts {
    <script src="@Url.DatedContent("~/js/jquery-customselect.min.js")"></script>
    <script src="@Url.DatedContent("~/js/moment-with-locales.min.js")"></script>
    <script src="@Url.DatedContent("~/js/bootstrap-datetimepicker.min.js")"></script>

    <script>
        var isSysadmin = @(GlobalSettings.oUserData.RoleID == (long)Role.BuiltinAdmin ? 1 : 0);
        var jsModel = "@Html.Raw(HttpUtility.JavaScriptStringEncode(@Newtonsoft.Json.JsonConvert.SerializeObject(GlobalSettings.oUserPermission, new Newtonsoft.Json.Converters.IsoDateTimeConverter() { DateTimeFormat = "dd/MM/yyyy HH:mm:ss" })))";
        var isDocAlreadyApproved = @Model.IsUploadApproved;

        var loadDdlTrigger = @(Model.DocID > default(long) ? 1 : default(int));
        var files = new Array();

        function getObjects(obj, key, val) {
            var objects = [];
            for (var i in obj) {
                if (!obj.hasOwnProperty(i)) continue;
                if (typeof obj[i] == 'object') {
                    objects = objects.concat(getObjects(obj[i], key, val));
                } else if (i == key && obj[key] == val) {
                    objects.push(obj);
                }
            }
            return objects;
        }

        var uploader = new qq.FineUploader({
            element: document.getElementById("uploader"),
            request: {
                endpoint: "@Url.Action("SaveUploadedFile", "Document", new { area = "" })" + "?deptid=" + ($("#ddlDepartment").val() * 1) + "&prjid=" + ($("#ddlProject").val() * 1) + "&subtype=" + ($("#ddlSubType").val() * 1) + "&finyr=" + ($("#ddlFinYear").val() * 1) + "&docno=" + $("#txtDocNo").val() + "&id=" + $("#hdnID").val()
            },
            resume: {
                enabled: true
            },
            validation: {
                allowedExtensions: isSysadmin ? ["jpeg", "jpg", "gif", "png", "tiff", "cal", "pdf", "doc", "docx", "odt", "odp", "ods", "xls", "xlsx", "zip", "bak"] : ["jpeg", "jpg", "gif", "png", "tiff", "cal", "pdf", "doc", "docx", "odt", "odp", "ods", "xls", "xlsx", "zip"],
                sizeLimit: 209715200 @*200 MB = 200 * 1024 * 1024 bytes*@
            },
            retry: {
                enableAuto: true,
                showButton: true
            },
            maxConnections: 1,
            callbacks: {
                onUpload: function (id, name) {
                    this.setEndpoint("@Url.Action("SaveUploadedFile", "Document", new { area = "" })" + "?deptid=" + ($("#ddlDepartment").val() * 1) + "&prjid=" + ($("#ddlProject").val() * 1) + "&subtype=" + ($("#ddlSubType").val() * 1) + "&finyr=" + ($("#ddlFinYear").val() * 1) + "&docno=" + $("#txtDocNo").val() + "&id=" + $("#hdnID").val());
                },
                onComplete: function (id, name, responseJSON, xhr) {
                    $("#hdnID").val(responseJSON.docid);
                },
                onAllComplete: function (succeeded, failed) {
                    if (failed.length > 0) {

                    } else {
                        if (succeeded.length > 0) {

                        }
                    }
                    for (var id in succeeded) {
                        files.push(this.getName(id));
                    }

                    if (files.length > 0) {
                        debugger;
                        alertInfo("success", files.join(), false);

                        var onlyfile = files.join().split('.').slice(0, -1).join('.');

                        if ($("#txtDocNo").val().trim() == "") {
                            $("#txtDocNo").val(files[0]); // new adition on 23-11-18
                        }
                        LoadAttachmentList($("#hdnID").val());

                        
                    }
                }
            }
        });

        $(function () {
            $("#txtDocDate").datetimepicker({
                format: "DD/MM/YYYY",
                ignoreReadonly: true
            });
            if (loadDdlTrigger <= 0) {
                $("#btnSave").hide();
            } else {
                $("#btnSave").show();
            }
        });

        function CheckSetAdditionalInfoNames(subtypeid) {
            $.ajax({
                url: "@Url.Action("GetAttachmentInfoMap", "Document", new { area = "" })?subtypeid=" + (subtypeid * 1),
                type: "GET",
                global: false
            }).done(function (data) {
                try {
                    $("#tblAttach thead").find("th#info1").html(data.Info1);
                    $("#tblAttach thead").find("th#info2").html(data.Info2);
                    $("#tblAttach thead").find("th#info2").html(data.Info3);
                } catch (ex) { }
            });
        }

        function LoadAttachmentList(docid) {
            $.ajax({
                url: "@(Url.Action("LoadAttachmentList", "Document", new { area = "" }))?docid=" + docid,
                type: "GET"
            }).done(function (data) {
                if (data != null) {
                    $(".dvattach").empty().append(data);
                    files = [];
                    try {
                        var s = getObjects(JSON.parse(jsModel), "SubTypeID", ($("#ddlSubType").val() * 1));
                        var haspermission = isSysadmin > 0 ? 1 : s[0].HasFullPermission;
                        if (haspermission > 0) {
                            $("#btnSave").show();
                            if (isDocAlreadyApproved <= 0) {
                                $("#chkIsApproved").prop("disabled", false);
                            } else {
                                $("#chkIsApproved").prop("disabled", true);
                            }
                            $(".dvattach").find("table").find(".fa-pencil-square-o").closest("a").show();
                            $(".dvattach").find("table").find(".fa-trash-o").closest("a").show();
                            //ShowApproval(true);
                        } else {
                            $("#btnSave").hide();
                            $("#chkIsApproved").prop("disabled", true);
                            $(".dvattach").find("table").find(".fa-pencil-square-o").closest("a").hide();
                            $(".dvattach").find("table").find(".fa-trash-o").closest("a").hide();
                            //ShowApproval(false);
                        }

                        $("#ddlDepartment").prop("disabled", true);
                        $("#ddlProject").prop("disabled", true);
                        $("#ddlSubType").prop("disabled", true);
                        $(".custom-select").find("ul").hide();
                        $(".custom-select").find("ul").closest("div").hide();
                        $(".custom-select").find("input").hide();

                        try {
                            CheckSetAdditionalInfoNames($("#hdnSubType").val() * 1);
                        } catch (exap) { }
                    } catch (exc) { }
                }
            });
        }

        function ShowApproval(show) {
            if (show) {
                $(".dvapproval").show();
            } else {
                $(".dvapproval").hide();
            }
        }

        function LoadDDLs() {
            $("#ddlFinYear").val($("#hdnFinYearID").val()).change();
            $("#ddlDepartment").val($("#hdnDeptID").val()).change();
            setTimeout(function () {
                $("#ddlProject").val($("#hdnProjectID").val()).change();
            }, 500);
            setTimeout(function () {
                $("#ddlSubType").val($("#hdnSubType").val()).change();
            }, 1000);
            setTimeout(function () {
                try {
                    var s = getObjects(JSON.parse(jsModel), "SubTypeID", ($("#ddlSubType").val() * 1));
                    var haspermission = isSysadmin > 0 ? 1 : s[0].HasFullPermission;
                    if (haspermission > 0) {
                        $("#ddlDepartment").prop("disabled", false);
                        $("#ddlProject").prop("disabled", false);
                        $("#ddlSubType").prop("disabled", false);
                        $(".custom-select").find("ul").show();
                        $(".custom-select").find("ul").closest("div").show();
                        $(".custom-select").find("input").show();
                        if (isDocAlreadyApproved <= 0) {
                            $("#chkIsApproved").prop("disabled", false);
                        } else {
                            $("#chkIsApproved").prop("disabled", true);
                        }
                        if (isDocAlreadyApproved > 0) {
                            $(".dvattach").find("table").find(".fa-pencil-square-o").closest("a").hide();
                            $(".dvattach").find("table").find(".fa-trash-o").closest("a").hide();
                            $("#btnSave").hide();
                        } else {
                            $(".dvattach").find("table").find(".fa-pencil-square-o").closest("a").show();
                            $(".dvattach").find("table").find(".fa-trash-o").closest("a").show();
                            $("#btnSave").show();
                        }
                        //ShowApproval(true);
                    } else {
                        $("#ddlDepartment").prop("disabled", true);
                        $("#ddlProject").prop("disabled", true);
                        $("#ddlSubType").prop("disabled", true);
                        $(".custom-select").find("ul").hide();
                        $(".custom-select").find("ul").closest("div").hide();
                        $(".custom-select").find("input").hide();
                        $(".dvattach").find("table").find(".fa-pencil-square-o").closest("a").hide();
                        $(".dvattach").find("table").find(".fa-trash-o").closest("a").hide();
                        $("#btnSave").hide();
                        $("#chkIsApproved").prop("disabled", true);
                        //ShowApproval(false);
                    }
                    try {
                        CheckSetAdditionalInfoNames($("#hdnSubType").val() * 1);
                    } catch (exap) { }
                } catch (ex) { }
            }, 1500);
        }

        $(function () {
            $("#ddlDepartment, #ddlFinYear").customselect();
            if (loadDdlTrigger > 0) {
                LoadDDLs();
            }
        });

        function DeleteDoc(docid) {
            $.ajax({
                url: "@Url.Action("DocumentDelete", "Document", new { area = "" })?did=" + docid,
                type: "GET"
            }).done(function (data) {
                if (data.Success > 0) {
                    alertInfo("success", data.Message, false);
                    window.location.href = "@Url.Action("Index", "Document", new { area = "" })";
                } else {
                    alertInfo("error", data.Message, false);
                }
            });
        }

        $(document).off("click", ".adelattach").on("click", ".adelattach", function (e) {
            var $this = $(this);
            var aid = $(this).attr("data-id");
            var did = $(this).attr("data-did");
            var r = confirm("Are you sure to delete?"); // added on 29.3.19
            if (r == true) { // condition added on 29.3.19
                $.ajax({
                    url: "@Url.Action("AttachmentDelete", "Document", new { area = "" })" + "?id=" + aid + "&did=" + did,
                    type: "GET"
                }).done(function (data) {
                    if (data.Success > 0) {
                        try {
                            $($this).closest("tr.tbratt").remove();
                            alertInfo("success", data.Message, false);
                            if ($(".dvattach").find("table.table-striped >tbody >tr").length <= 0) {
                                $(".dvattach").empty();
                                $("#btnSave").hide();
                                DeleteDoc(did);
                            }
                        } catch (ex) { }
                    } else {
                        alertInfo("error", data.Message, false);
                    }
                });
            } 
        });

        $(document).off("change", "#ddlSubType").on("change", "#ddlSubType", function (e) {
            var subtypeid = $(this).val();
            var haspermission = 0;
            if (subtypeid != "0") {
                try {
                    var s = getObjects(JSON.parse(jsModel), 'SubTypeID', (subtypeid * 1));
                    haspermission = isSysadmin > 0 ? 1 : s[0].HasFullPermission;
                } catch (ex) { }
                if (haspermission > 0) {
                    if (isDocAlreadyApproved <= 0) {
                        $(".ulod").show();
                    } else {
                        $(".ulod").hide();
                    }
                } else {
                    $(".ulod").hide();
                }
            } else {
                $(".ulod").hide();
            }
        });

        $(document).off("change", "#ddlProject").on("change", "#ddlProject", function (e) {
            var prjid = $(this).val();
            if (prjid != "0") {
                $.ajax({
                    url: "@Url.Action("LoadDropdownOnDemand", "Document", new { area = "" })" + "?id=" + prjid + "&param=@((int)Dropdown.SubType)",
                    type: "GET"
                }).done(function (data) {
                    if (data != null) {
                        $("#dvchildSubType").empty().append("<select id=\"ddlSubType\" class=\"form-control custom-select\"></select>");
                        var list = document.getElementById("ddlSubType");
                        list.innerHTML = "";
                        for (var i = 0; i < data.length; i++) {
                            list.add(new Option(data[i].Text, data[i].Value));
                        }
                        $("#ddlSubType").customselect();
                        $("#dvSubType").show();
                        @*$(".ulod").show();*@
                    }
                });
            } else {
                try {
                    var list = document.getElementById("ddlSubType");
                    list.innerHTML = "";
                    $("#dvSubType").hide();
                    $(".ulod").hide();
                } catch (ex) { }
            }
        });

        $(document).off("change", "#ddlDepartment").on("change", "#ddlDepartment", function (e) {
            var deptid = $(this).val();
            if (deptid != "0") {
                $.ajax({
                    url: "@Url.Action("LoadDropdownOnDemand", "Document", new { area = "" })" + "?id=" + deptid + "&param=@((int)Dropdown.Project)",
                    type: "GET"
                }).done(function (data) {
                    if (data != null) {
                        $("#dvchildProject").empty().append("<select id=\"ddlProject\" class=\"form-control custom-select\"></select>");
                        var list = document.getElementById("ddlProject");
                        list.innerHTML = "";
                        for (var i = 0; i < data.length; i++) {
                            list.add(new Option(data[i].Text, data[i].Value));
                        }
                        $("#ddlProject").customselect();
                        $("#dvProject").show();
                    }
                });
            } else {
                try {
                    var list = document.getElementById("ddlProject");
                    list.innerHTML = "";
                    $("#dvProject").hide();
                } catch (ex) { }
            }

            try {
                var list1 = document.getElementById("ddlSubType");
                list1.innerHTML = "";
                $("#dvSubType").hide();
                $(".ulod").hide();
            } catch (oex) { }
        });

        $(document).off("click", "#btnCancel").on("click", "#btnCancel", function (e) {
            window.location.href = "@Url.Action("Index", "Document", new { area = "" })";
        });

        $(document).off("click", "#btnSave").on("click", "#btnSave", function (e) {
            if ($("#txtDocNo").val() == "" || $("#ddlProject").val() == "0" || $("#ddlDepartment").val() == "0" || $("#ddlSubType").val() == "0") {
                alertInfo("error", "Please complete all * marked fields", false);
            } else {
                var postData = new Object();
                postData.DocInfo10 = $("#hdnID").val();
                postData.DocInfo9 = $("#txtDocDate").val().trim();
                postData.DocNumber = $("#txtDocNo").val().trim().toUpperCase();
                postData.FinYearID = ($("#ddlFinYear").val() * 1);
                postData.DeptID = ($("#ddlDepartment").val() * 1);
                postData.ProjectID = ($("#ddlProject").val() * 1);
                postData.SubTypeID = ($("#ddlSubType").val() * 1);
                postData.FileNo = $("#txtFileNo").val().trim().toUpperCase();
                postData.IsUploadApproved = $("#chkIsApproved").is(":checked") ? 1 : 0;

                $.ajax({
                    url: "@Url.Action("SaveDoc", "Document", new { area = "" })",
                    type: "POST",
                    data: JSON.stringify(postData),
                    contentType: "application/json; charset=utf-8"
                }).done(function (data) {
                    if (data.Success > 0) {
                        alertInfo("success", data.Message, false);
                        if ($("#chkIsApproved").is(":checked")) {
                            $("#chkIsApproved").prop("disabled", true);
                        } else {
                            $("#chkIsApproved").prop("disabled", false);
                        }
                       window.location.href = "@Url.Action("New", "Document", new { area = "" })?id=" + $("#hdnID").val();
                        

                    } else {
                        alertInfo("error", data.Message, false);
                    }
                });
            }
        });
    </script>
}